{
      "components": [
            {
                  "resource": "virtualDomains.GenUser",
                  "name": "getUser",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenStuIDName",
                  "name": "getStudent",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenStuLookup",
                  "name": "studentLookup",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegStuCourses",
                  "name": "getStuCourses",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegTermSelect",
                  "name": "getTermSelect",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenSubject",
                  "name": "getSubjects",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenBlocks",
                  "name": "getBlocks",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenInstructor",
                  "name": "getInstructors",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenDegReq",
                  "name": "getDegreeRequirements",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenCampus",
                  "name": "getCampuses",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.StuAddGrid",
                  "name": "getAddGrid",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenGradingTrackNoAuditNoDrop",
                  "name": "getGradingTrack",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegStuCourses",
                  "name": "addClass",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegInfo",
                  "name": "getPreRegInfo",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreReqEdits",
                  "name": "getEdits",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegInstrPIN",
                  "name": "getInstrPIN",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegStuPIN",
                  "name": "getStuPIN",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreRegDeptPIN",
                  "name": "getDeptPIN",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.PreReqConsentRequired",
                  "name": "getConsentRequired",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "resource": "virtualDomains.GenBlockOff",
                  "name": "getBlockOff",
                  "type": "resource",
                  "staticData": []
            },
            {
                  "components": [
                        {
                              "readonly": false,
                              "name": "UserID",
                              "onLoad": "// UserID - onLoad\n\nvar userType = '';\nvar auth = '';\nvar today = new Date();\nvar endDate;\nvar term = '';\nvar maxPoints = '';\nvar termOK = true;\nvar maxPointsOK = true;\n\n// Internet Explorer 6-11\nvar isIE = /*@cc_on!@*/false || !!document.documentMode;\n\n// IE Browser Test\nif (isIE) {\n  alert(\"This applicaiton does not support Internet Explorer.  Please choose a different browser.\",{flash:true});\n  return;\n}\n\n// Initially, hide the PreRegInstructions and show the BlockPreRegTitle\ndocument.getElementById(\"pbid-PreRegInstructions\").style.display = \"none\";\n$BlockPreRegInstructions.$visible = true;\n\n// Initially, hide the PreRegClosed Literal\ndocument.getElementById('pbid-PreRegClosed').value = '';\ndocument.getElementById('pbid-PreRegClosed').style.display = 'none';\n\n// Get the Preregistration Term variables (GTVSDAX)\n$PreRegType.$load({clearCache:true});\n$PreRegTerm.$load({clearCache:true});\n$PreRegEndDate.$load({clearCache:true});\n$MaxPoints.$load({clearCache:true});\n\nwaitForTermVars();\n\nfunction waitForTermVars() {\n\n  // The waitForTermVars function calls the areTermVarsLoaded function\n  // We do this to make JavaScript waits for the completion of the DB $load calls\n\n  var promise = areTermVarsLoaded();\n  promise.then(function(result) {\n\n    // Promise fulfilled.  Database Term variables have completed their load.\n    \n    // Debug\n    //alert(\"PreRegType=\" + document.getElementById('pbid-PreRegType').value,{flash:true});\n    //alert(\"PreRegTerm=\" + document.getElementById('pbid-PreRegTerm').value,{flash:true});\n    //alert(\"PreRegEndDate=\" + document.getElementById('pbid-PreRegEndDate').value,{flash:true});\n    //alert(\"MaxPoints=\" + document.getElementById('pbid-MaxPoints').value,{flash:true});\n\n    // Load GTVSDAX variables\n    term = document.getElementById('pbid-PreRegTerm').value;\n    maxPoints = document.getElementById('pbid-MaxPoints').value;\n    var endDate = new Date(document.getElementById('pbid-PreRegEndDate').value);\n\n    // Check GTVSDAX Term\n    if (term.length == 4) {\n      if (isNaN(term)) {\n        alert(\"A\",{flash:true});\n        termOK = false;\n      }\n    }\n    else if (term.length == 6) {\n      if (isNaN(term)) {\n        alert(\"B\",{flash:true});\n        termOK = false;\n      }\n      else if (term.substring(4,6) != '10' && term.substring(4,6) != '20' && term.substring(4,6) != '30') {\n        alert(\"C\",{flash:true});\n        termOK = false;\n      }\n    }\n    else {\n      alert(\"D\",{flash:true});\n      termOK = false;\n    }\n\n    // Check GTVSDAX Max Points\n    if (maxPoints.length == 2) {\n      if (isNaN(maxPoints)) {\n        maxPointsOK = false;\n      }\n    }\n    else {\n      maxPointsOK = false;\n    }\n\n    // Debug\n    //alert(\"term=\" + term,{flash:true});\n    //alert(\"maxPoints=\" + maxPoints,{flash:true});\n    //alert(\"termOK=\" + termOK,{flash:true});\n    //alert(\"maxPointsOK=\" + maxPointsOK,{flash:true});\n\n    if (termOK && maxPointsOK && endDate >= today) {\n\n      // Preregistration is Open\n\n      // Determine what kind of user is signing on (Web Tailor)\n      for (i=0; i<$$user.authorities.length; i++) {\n        auth = $$user.authorities[i].objectName;\n        //alert(auth,{flash:true});  // Helpful Debug - Shows user's WebTailor Roles\n        if (auth.indexOf('WTAILORADMIN') > -1) {  // was GPBADMN\n          userType = \"Dev\";\n        }\n        if (auth.indexOf('REGISTRAR') > -1) {\n          userType = \"Reg\";\n        }\n        if (auth.indexOf('STUDENT') > -1) {\n          userType = \"Stu\";\n        }\n      }\n\n      if (userType == 'Reg' || userType == 'Dev') {\n\n        // Show the student lookup block\n        $BlockStuLookup.$visible = true;\n        document.getElementById(\"pbid-UserSource\").value = 'R';  // Registrars or Dev User\n        document.getElementById('pbid-UserButton').click();\n      }\n      else if (userType == 'Stu') {\n\n        // Hide the student lookup block\n        $BlockStuLookup.$visible = false;\n\n        // Show the Preregistration Passcode block\n        $StuPreRegPasscodeBlock.$visible = true;\n\n        // Prep data\n        document.getElementById(\"pbid-UserSource\").value = 'S';  // Student User\n        var userSource = 'S';\n        document.getElementById('pbid-UserButton').click();\n\n        // Load the student user PIDM\n        $UserPIDM.$load();\n\n        waitForUserPidmVar();\n\n      }\n      else {\n        document.getElementById(\"pbid-UserSource\").value = null;  // User Not Allowed\n\n        // Hide the student lookup block\n        $BlockStuLookup.$visible = false;\n\n        alert(\"Sorry, you're not authorized to use the Preregistration application.\",{type:\"error\"});\n      }\n\n    }\n    else {\n\n      // Preregistration is Closed\n\n      // Show the Preregistration Closed message\n      document.getElementById('pbid-PreRegClosed').value = 'Preregistration is closed.';\n      document.getElementById('pbid-PreRegClosed').style.display = 'block';\n\n      // Hide Preregistration Instruction Objects\n      document.getElementById(\"pbid-PreRegButton\").style.display = \"none\";\n      document.getElementById(\"pbid-PreRegInstructions\").style.display = \"none\";\n\n      // Hide All Blocks\n      $BlockStuLookup.$visible = false;\n      $StuPreRegPasscodeBlock = false;\n      $BlockAddClasses.$visible = false;\n      $BlockStuCourses.$visible = false;\n      $BlockClassSearch.$visible = false;\n      $BlockCourseAdd.$visible = false;\n    }\n\n  });\n\n}  // function waitForTermVars()\n\nfunction areTermVarsLoaded() {  // See if term variables are loaded\n  var deferred1 = $.Deferred();\n  var nextStep1 = function() {\n    if ($PreRegType == null || $PreRegTerm == null || $PreRegEndDate == null || $MaxPoints == null) {\n      // Term variables have not loaded yet, wait a little more.\n      setTimeout(nextStep1, 100); \n    }\n    else {\n      // Term variables have loaded\n      deferred1.resolve(\"Term Variables Loaded\");\n    }\n  }\n  nextStep1();\n  return deferred1.promise();\n}\n\nfunction waitForUserPidmVar() {\n\n  // The waitForUserPidmVar function calls the isUserPidmVarLoaded function\n  // We do this to make JavaScript waits for the completion of the DB calls ($load)\n\n  var promise = isUserPidmVarLoaded();\n  promise.then(function(result) {\n    // Promise fulfilled.  Database UserPIDM variable has completed its load.\n    document.getElementById('pbid-PassPIDM').value = document.getElementById('pbid-UserPIDM').value;\n  });\n}\n\nfunction isUserPidmVarLoaded() {  // See if the UserPIDM variable is loaded\n  var deferred2 = $.Deferred();\n  var nextStep2 = function() {\n    if ($UserPIDM == null) {\n      // UserPIDM variable is not loaded yet, wait a little more.\n      setTimeout(nextStep2, 100); \n    }\n    else {\n      // UserPIDM has loaded\n      $PassPIDM = document.getElementById('pbid-UserPIDM').value;\n      deferred2.resolve(\"UserPIDM Loaded\");\n    }\n  }\n  nextStep2();\n  return deferred2.promise();\n}",
                              "model": "getUser.USER_ID",
                              "loadInitially": true,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "UserPIDM",
                              "model": "getUser.USER_PIDM",
                              "loadInitially": true,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "PassPIDM",
                              "model": "",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "onClick": "return;",
                              "name": "UserButton",
                              "label": "User Button",
                              "type": "button"
                        },
                        {
                              "readonly": false,
                              "name": "UserSource",
                              "onLoad": "",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "PreRegType",
                              "onLoad": "",
                              "model": "getPreRegInfo.PREREG_TYPE",
                              "style": "",
                              "label": "",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "PreRegTerm",
                              "model": "getPreRegInfo.PREREG_TERM",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "PreRegEndDate",
                              "model": "getPreRegInfo.PREREG_END_DATE",
                              "loadInitially": true,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "MaxPoints",
                              "onLoad": "",
                              "model": "getPreRegInfo.PREREG_MAX_POINTS",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "TotalPointsIndex",
                              "onLoad": "",
                              "loadInitially": false,
                              "type": "text",
                              "onUpdate": "",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "AddCourseEdits",
                              "onLoad": "",
                              "model": "getEdits.EDIT_MSG",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "stu_pidm": "$PassPIDM",
                                    "crn": "$ClassCRN"
                              },
                              "value": "",
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "StudentPIN",
                              "onLoad": "",
                              "model": "getStuPIN.STU_PIN",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "stu_pidm": "$PassPIDM"
                              },
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "InstructorPIN",
                              "model": "getInstrPIN.INSTR_PIN",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "crn": "$ClassCRN"
                              },
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "DepartmentPIN",
                              "model": "getDeptPIN.DEPT_PIN",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "crn": "$ClassCRN"
                              },
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "ConsentRequired",
                              "model": "getConsentRequired.CONSENT_REQUIRED",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "crn": "$ClassCRN"
                              },
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "BlockOff",
                              "model": "getBlockOff.BLOCK_OFF",
                              "loadInitially": false,
                              "type": "text",
                              "parameters": {
                                    "term_code": "$PreRegTerm",
                                    "stu_pidm": "$PassPIDM",
                                    "crn": "$ClassCRN"
                              },
                              "required": false,
                              "validation": {}
                        },
                        {
                              "readonly": false,
                              "name": "TermCRN",
                              "loadInitially": true,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        }
                  ],
                  "name": "BlockHidden",
                  "showInitially": false,
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "valueStyle": "btn btn-sm",
                              "onClick": "// PreRegButton - onClick\n\n// Show/Hide the Preregistration instructions\n\nif (document.getElementById(\"pbid-PreRegInstructions\").style.display == 'none') {\n  document.getElementById(\"pbid-PreRegInstructions\").style.display = \"block\";\n}\nelse {\n  document.getElementById(\"pbid-PreRegInstructions\").style.display = \"none\";\n}",
                              "name": "PreRegButton",
                              "label": "Instructions",
                              "type": "button"
                        },
                        {
                              "name": "PreRegClosed",
                              "type": "literal",
                              "value": "Preregistration is closed."
                        },
                        {
                              "readonly": false,
                              "name": "PreRegInfo",
                              "model": "getPreRegInfo.PREREG_INFO",
                              "loadInitially": true,
                              "type": "text",
                              "parameters": {},
                              "required": false,
                              "validation": {}
                        },
                        {
                              "components": [
                                    {
                                          "name": "PreRegInstructions",
                                          "style": "",
                                          "type": "literal",
                                          "value": "<br />\n<p>\n\t<strong>Welcome to the Preregistration application!</strong>\n</p>\n<p>\n\tHere's what you can do with this application.\n\t<br />&bull; Add and Drop preregistration courses.\n\t<br />&bull; Change preregistration course point allocations.\n\t<br />&bull; Change a preregistration course's Grading Track.\n</p>\n<p>\n\t<strong>Adding a Course</strong>\n</p>\n<p>\n\t&bull; Adding a course to your schedule is easy as pie!\n\t<br />&bull; Go to the &ldquo;Course Add&rdquo; section. You should see your name and student ID number.\n\t<br />&bull; If you happen to know the CRN of the course you wish to add, then just enter it here and click the Add Course button.\n\t<br />&bull; Alas, the above is not usually the norm. More often you will need to look-up the CRN (Course Reference Number) for the course you wish to add.\n\t<br />&bull; To look-up a course, press the &ldquo;Search Class Schedule&rdquo; button and then scroll down to the bottom of the page.\n\t<br />&bull; Here you will find filters to restrict your class search. Only the Term filter is required, but please note that results are limited to the first 200 classes found, so be as specific as possible.\n\t<br />&bull; Once you have chosen your filter, then press the &ldquo;Class Search&rdquo; button to load the results of the search.\n\t<br />&bull; Find the class you wish to add and then click on the corresponding checkbox on the left. This will then close this section and the Class Schedule Search section and the chosen course will appear in the Preregistration Choices section above.<br />&bull; All added courses will default to 0 points, and a G grading track.\n</p>\n<p>\n\t<strong>Course Point Allocation</strong>\n</p>\n<p>\n\t&bull; After adding a course, then you can change the number of points you wish to allocate to that course.\n\t<br />&bull; Point allocation should reflect your course priority (higher points = stronger priority).\n\t<br />&bull; Use the course's corresponding input box under the Points column to change your course point allocations.\n\t<br />&bull; The points allocated cannot exceed the number of points permitted for the term.\n\t<br />&bull; Each course must have at least one point allocated.\n</p>\n<p>\n\t<b>Student Time Off Policy</b><br />\n\t&bull; Please visit the <a target=\"_blank\" href='https://www.coloradocollege.edu/basics/welcome/leadership/policies/student-time-off-policy'>Student Time Off Policy</a> web page to understand when and how often a student can take a Block-Off.\n</p>\n<br />"
                                    }
                              ],
                              "name": "BlockPreRegInstructions",
                              "showInitially": false,
                              "type": "block"
                        }
                  ],
                  "name": "BlockPreRegTitle",
                  "showInitially": true,
                  "style": "",
                  "label": "Preregistration",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "components": [
                                    {
                                          "name": "StuLookupLabel",
                                          "type": "literal",
                                          "value": "Student Lookup"
                                    },
                                    {
                                          "name": "LookupInstructions",
                                          "style": "",
                                          "label": "",
                                          "type": "literal",
                                          "value": "<center>Enter a Student's ID or First Name or Last Name</center>"
                                    }
                              ],
                              "name": "BlockStuLookupLabels",
                              "showInitially": true,
                              "type": "block"
                        },
                        {
                              "components": [
                                    {
                                          "readonly": false,
                                          "name": "StuLookup",
                                          "onLoad": "",
                                          "model": "",
                                          "style": "",
                                          "label": "",
                                          "loadInitially": true,
                                          "placeholder": "",
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "valueStyle": "btn btn-sm",
                                          "onClick": "var stuLkup = document.StuLookupForm.StuLookup.value;\n\nif (stuLkup.replace(/^\\s+/g, '').length == 0) {\n  document.StuLookupForm.StuLookup.focus();\n  alert(\"Student Lookup is empty.\", {flash: true,type:\"error\"});\n  return;\n}\n\ndocument.getElementById('pbid-StuSelect').options[0].text = 'Loading...';\n\n$StuSelect.$populateSource();",
                                          "name": "StuSearch",
                                          "style": "",
                                          "label": "Search",
                                          "type": "button"
                                    },
                                    {
                                          "onError": "",
                                          "label": "",
                                          "loadInitially": false,
                                          "type": "select",
                                          "required": false,
                                          "sourceParameters": {
                                                "stu_lookup": "$StuLookup"
                                          },
                                          "name": "StuSelect",
                                          "onLoad": "document.getElementById('pbid-StuSearch').click();\n\nif (document.getElementById('pbid-StuSelect').options.length > 1) {\n  document.getElementById('pbid-StuSelect').options[0].text = 'Select a Student';\n}\nelse {\n  document.getElementById('pbid-StuSelect').options[0].text = 'No Students Found';\n}",
                                          "model": "StuSelect",
                                          "sourceModel": "studentLookup",
                                          "style": "",
                                          "placeholder": "Waiting for a Lookup Value...",
                                          "labelKey": "STU_FULL_NAME",
                                          "valueKey": "STU_PIDM",
                                          "onUpdate": "// StuSelect - onUpdate\n\n// Selected student is changing\n\n// Assign chosen student's values\nvar stuSelect = $StuSelect.$selected?$StuSelect.$selected. STU_PIDM:null;\n$PassPIDM = $StuSelect.$selected?$StuSelect.$selected. STU_PIDM:null;\nvar userSource = document.getElementById('pbid-UserSource').value;\n\nif (stuSelect != null) {\n  $AddEntryStuName.$load({clearCache:true});\n  $AddEntryStuClass.$load({clearCache:true});\n  $CoursesTable.$load({clearCache:true});\n  $BlockClassSearch.$visible = false;\n  $BlockCourseAdd.$visible = false;\n  document.getElementById('pbid-ClassCRN').value = '';\n  document.getElementById('pbid-ClassConsent').value = '';\n}\nelse {\n  // Hide all Blocks\n  $BlockAddClasses.$visible = false;\n  $BlockStuCourses.$visible = false;\n  $BlockClassSearch.$visible = false;\n  $BlockCourseAdd.$visible = false;\n}",
                                          "value": ""
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "StuLookupForm",
                              "showInitially": true,
                              "style": "",
                              "type": "form"
                        }
                  ],
                  "name": "BlockStuLookup",
                  "showInitially": false,
                  "style": "blocks",
                  "label": "",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "name": "StuPreRegPasscodeLabel",
                              "type": "literal",
                              "value": "Preregistration Passcode Verification"
                        },
                        {
                              "submitLabel": "",
                              "components": [
                                    {
                                          "name": "StuPreRegPasscodeInstructions",
                                          "type": "literal",
                                          "value": "Please enter your Preregistration Passcode.<br/><br/>"
                                    },
                                    {
                                          "components": [
                                                {
                                                      "readonly": false,
                                                      "name": "StuPreRegPasscode",
                                                      "style": "blockInline",
                                                      "label": "Preregistration Passcode:",
                                                      "loadInitially": true,
                                                      "type": "text",
                                                      "parameters": {},
                                                      "required": false,
                                                      "validation": {}
                                                },
                                                {
                                                      "valueStyle": "btn btn-sm",
                                                      "onClick": "// StuPreRegPasscodeButton - onClick\n\nvar paws;\n\n// Passcode database edits\n$PreRegTerm = document.getElementById('pbid-PreRegTerm').value;\n$StudentPIN.$load({clearCache:true});\n\nwaitForStudentPIN();\n\n\nfunction waitForStudentPIN() {\n\n  // The waitForStudentPIN function calls the isStudentPINLoaded function\n  // We do this to make JavaScript wait for the completion of the DB calls ($load)\n\n  var promise = isStudentPINLoaded();\n  promise.then(function(result) {\n    \n    // Promise fulfilled.  Database myVariable has completed its load.\n    \n    // Debug\n    //alert(\"StudentPIN=\" + document.getElementById('pbid-StudentPIN').value,{flash:true});\n\n    // Instructor Consent edit\n    if (document.getElementById('pbid-StudentPIN').value > '') {\n      if (document.getElementById('pbid-StuPreRegPasscode').value == '') {\n        alert(\"A Preregistration Passcode is required.\",{flash: true,type:\"error\"});\n        return;\n      }\n      if (document.getElementById('pbid-StuPreRegPasscode').value != document.getElementById('pbid-StudentPIN').value) {\n        alert(\"The Preregistration Passcode you entered was not correct.\",{flash: true,type:\"error\"});\n        return;\n      }\n    }\n\n    // The preregistration password was correct.\n\n    // Hide the Student Preregistration Passcode block\n    $StuPreRegPasscodeBlock.$visible = false;\n\n    // Load the goods\n    $AddEntryStuName.$load({clearCache:true});\n    $AddEntryStuClass.$load({clearCache:true});\n    $CoursesTable.$load({clearCache:true});\n\n    // Show these Blocks\n    $BlockAddClasses.$visible = true;\n    $BlockStuCourses.$visible = true;\n  });\n}\n\nfunction isStudentPINLoaded() {  // See if the StudentPIN is loaded\n  var deferred = $.Deferred();\n  var nextStep = function() {\n    if ($StudentPIN == null) {\n      // StudentPIN is not loaded yet, wait a little more.\n      setTimeout(nextStep, 100); \n    }\n    else {\n      // StudentPIN has loaded\n      deferred.resolve(\"StudentPIN Loaded\");\n    }\n  }\n  nextStep();\n  return deferred.promise();\n}",
                                                      "name": "StuPreRegPasscodeButton",
                                                      "label": "Submit",
                                                      "type": "button"
                                                }
                                          ],
                                          "name": "StuPreRegPasscodeInputBlock",
                                          "showInitially": true,
                                          "style": "blockAddEntry",
                                          "type": "block"
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "StuPreRegPasscodeForm",
                              "showInitially": true,
                              "style": "blocks",
                              "label": "",
                              "type": "form"
                        }
                  ],
                  "name": "StuPreRegPasscodeBlock",
                  "showInitially": false,
                  "style": "blocks",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "name": "AddCourseLabel",
                              "type": "literal",
                              "value": "Course Add"
                        },
                        {
                              "components": [
                                    {
                                          "valueStyle": "",
                                          "label": "Name:",
                                          "loadInitially": true,
                                          "type": "text",
                                          "required": false,
                                          "readonly": false,
                                          "labelStyle": "",
                                          "name": "AddEntryStuName",
                                          "onLoad": "// Make these fields read only\ndocument.getElementById('pbid-AddEntryStuName').readOnly = true;\ndocument.getElementById('pbid-AddEntryStuClass').readOnly = true;\ndocument.getElementById('pbid-AddVerifyCIDTitle').readOnly = true;\ndocument.getElementById('pbid-AddVerifyInstructor').readOnly = true;\ndocument.getElementById('pbid-AddVerifyBlockUnit').readOnly = true;\ndocument.getElementById('pbid-AddMessage').readOnly = true;\ndocument.getElementById('pbid-DropMessage').readOnly = true;",
                                          "model": "getStudent.STU_NAME_ID",
                                          "style": "blockAddEntry",
                                          "parameters": {
                                                "stu_pidm": "$PassPIDM"
                                          },
                                          "value": "",
                                          "validation": {}
                                    },
                                    {
                                          "label": "Class:",
                                          "loadInitially": true,
                                          "type": "text",
                                          "required": false,
                                          "readonly": false,
                                          "labelStyle": "",
                                          "name": "AddEntryStuClass",
                                          "onLoad": "",
                                          "model": "getStudent.STU_CLASS",
                                          "style": "blockAddEntry",
                                          "parameters": {
                                                "stu_pidm": "$PassPIDM"
                                          },
                                          "value": "",
                                          "validation": {}
                                    }
                              ],
                              "submit": "",
                              "nextButtonLabel": "Next",
                              "name": "AddEntryDisplayForm",
                              "showInitially": true,
                              "style": "blockAddEntry",
                              "label": "",
                              "type": "form"
                        },
                        {
                              "components": [
                                    {
                                          "readonly": false,
                                          "name": "ClassCRN",
                                          "onLoad": "",
                                          "style": "flex",
                                          "label": "CRN",
                                          "loadInitially": true,
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "readonly": false,
                                          "name": "ClassConsent",
                                          "style": "flex",
                                          "label": "Consent Passcode",
                                          "loadInitially": true,
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "Class",
                              "showInitially": true,
                              "style": "blockInline",
                              "type": "form"
                        },
                        {
                              "components": [
                                    {
                                          "valueStyle": "btn btn-sm",
                                          "onClick": "// SearchClassSchedule - onClick\n\n// Show the Class Schedule search block and hide the Course Add and Course Drop blocks\n\nif ($BlockClassSearch.$visible == false) {\n  $BlockAddClasses.$visible = false;\n  $BlockStuCourses.$visible = false;\n  $BlockClassSearch.$visible = true;\n  $SearchTermSelect.$load({clearCache:true});\n  $SearchSubjectSelect.$load({clearCache:true});\n  $SearchDegReqSelect.$load({clearCache:true});\n  $SearchCampusSelect.$load({clearCache:true});\n}",
                                          "name": "SearchClassSchedule",
                                          "label": "Search Class Schedule",
                                          "type": "button"
                                    },
                                    {
                                          "valueStyle": "btn btn-sm",
                                          "onClick": "// AddCourseButton - onClick\n\n// Retrieve input values from the Class form\nvar crn = document.getElementById('pbid-ClassCRN').value;\n\n// Remove the value \"string:\" which was prefixed via the Class Schedule Search process\nvar crn = crn.substring(crn.indexOf(\":\")+1,crn.length);\n\n// CRN edits\n\n// CRN null edit\nif (crn.length == 0) {\n  alert(\"CRN required.\",{flash: true,type:\"error\"});\n  document.getElementById('pbid-ClassCRN').focus();\n  return;\n}\n\n// CRN numeric edit\nif (isNaN(crn)) {\n  alert(\"CRN is not numeric.\",{flash: true,type:\"error\"});\n  document.getElementById('pbid-ClassCRN').focus();\n  return;\n}\n\n// CRN maximum length value edit\nif (crn.length > 5) {\n  alert(\"CRN value is greater than 5 digits.\",{flash: true,type:\"error\"});\n  document.getElementById('pbid-ClassCRN').focus();\n  return;\n}\n\n// CRN minimum length value edit\nif (crn.length < 5) {\n  alert(\"CRN value is less than 5 digits.\",{flash: true,type:\"error\"});\n  document.getElementById('pbid-ClassCRN').focus();\n  return;\n}\n\n// Upper case the Class Consent value\ndocument.getElementById('pbid-ClassConsent').value = document.getElementById('pbid-ClassConsent').value.toUpperCase();\n\n// CRN database edits\n$PreRegTerm = document.getElementById('pbid-PreRegTerm').value;\ndocument.getElementById('pbid-AddCourseEdits').value = '';\n$AddCourseEdits = '';\n$AddCourseEdits.$load({clearCache:true});\n\nwaitForAddCourseEdits();\n\n\nfunction waitForAddCourseEdits() {\n\n  // The waitForAddCourseEdits function calls the areAddCourseEditsLoaded function\n  // We do this to make JavaScript waits for the completion of the DB calls ($load)\n\n  var promise = areAddCourseEditsLoaded();\n  promise.then(function(result) {\n\n    // Promise fulfilled.  Database AddCourseEdits variable has completed its load.\n    \n    // Debug\n    //alert(\"AddCourseEdits=\" + document.getElementById('pbid-AddCourseEdits').value,{flash:true});\n\n    // Invalid CRN edit\n    if (document.getElementById('pbid-AddCourseEdits').value == '0') {\n      document.getElementById('pbid-AddCourseEdits').value = 'Invalid CRN';\n    }\n\n    // No errors edit\n    if (document.getElementById('pbid-AddCourseEdits').value.length == 6) {  // Length of valid CRN Term is 6\n      $TermCRN = document.getElementById('pbid-AddCourseEdits').value;\n      document.getElementById('pbid-AddCourseEdits').value = '';\n    }\n    \n    // Display any CRN edit messages\n    if (document.getElementById('pbid-AddCourseEdits').value.length > 0) {\n      alert(document.getElementById('pbid-AddCourseEdits').value,{flash:true});\n      document.getElementById('pbid-ClassCRN').focus();\n      return;\n    }\n\n    // Load consent PINs\n    $ConsentRequired.$load({clearCache:true});\n    $InstructorPIN.$load({clearCache:true});\n    $DepartmentPIN.$load({clearCache:true});\n\n    waitForPinsLoads();\n\n  });\n}\n\nfunction areAddCourseEditsLoaded() {  // See if the AddCourseEdits variable is loaded\n  var deferred = $.Deferred();\n  var nextStep = function() {\n    if ($AddCourseEdits == '') {\n      // AddCourseEdits are not loaded yet, wait a little more.\n      setTimeout(nextStep, 100); \n    }\n    else {\n      // AddCourseEdits have loaded\n      deferred.resolve(\"AddCourseEdits Loaded\");\n    }\n  }\n  nextStep();\n  return deferred.promise();\n}\n\nfunction waitForPinsLoads() {\n\n  // The waitForPinsLoads function calls the arePinsLoaded function\n  // We do this to make JavaScript waits for the completion of the DB calls ($load)\n\n  var promise = arePinsLoaded();\n  promise.then(function(result) {\n\n    // Promise fulfilled.  Database PIN variables have completed their loads.\n\n    // Debug\n    //alert(\"AddCourseEdits=\" + document.getElementById('pbid-ConsentRequired').value,{flash:true});\n    //alert(\"DepartmentPIN=\" + document.getElementById('pbid-DepartmentPIN').value,{flash:true});\n    //alert(\"ClassConsent=\" + document.getElementById('pbid-ClassConsent').value,{flash:true});\n\n    if (document.getElementById('pbid-ConsentRequired').value == 'D') {\n    \n      // Department consent is required\n\n      if (document.getElementById('pbid-DepartmentPIN').value == '') {\n        alert(\"Department consent is required for this CRN, but this subject has no passcode. Please contact the Registrar.\",{flash: true,type:\"error\"});\n        return;\n      }\n      if (document.getElementById('pbid-ClassConsent').value == '') {\n        alert(\"Department consent is required for this CRN. Please enter the Consent Passcode.\",{flash: true,type:\"error\"});\n        return;\n      }\n      if (document.getElementById('pbid-ClassConsent').value != document.getElementById('pbid-DepartmentPIN').value) {\n        alert(\"Department consent is required for this CRN and the Consent Passcode you entered is not the right one.\",{flash: true,type:\"error\"});\n        return;\n      }\n    }\n\n    if (document.getElementById('pbid-ConsentRequired').value == 'I') {\n    \n      // Instructor consent is required\n\n      if (document.getElementById('pbid-InstructorPIN').value == '') {\n        alert(\"Instructor consent is required for this CRN, but this instructor has no passcode. Please contact the Registrar.\",{flash: true,type:\"error\"});\n        return;\n      }\n      if (document.getElementById('pbid-ClassConsent').value == '') {\n        alert(\"Instructor consent is required for this CRN. Please enter the Consent Passcode.\",{flash: true,type:\"error\"});\n        return;\n      }\n      if (document.getElementById('pbid-ClassConsent').value != document.getElementById('pbid-InstructorPIN').value) {\n        alert(\"Instructor consent is required for this CRN and the Consent Passcode you entered is not the right one.\",{flash: true,type:\"error\"});\n        return;\n      }\n    }\n\n    // All edits have passed. Add the preregistration course.\n\n    // PreRegStuCourses - Inserts into sfrstcr and sfrareg\n    $addClass.$post({  // ---------- addClass Post\n      stu_pidm: $PassPIDM,\n      term_code: $TermCRN,\n      crn: crn\n    },\n    null,\n    function(response) {  // ---------- addClass Success\n\n      // Success!\n\n      // Reset the CRN input\n      document.getElementById('pbid-ClassCRN').value = '';\n      document.getElementById('pbid-ClassConsent').value = '';\n\n      // Reload the CoursesTable from the database\n      $CoursesTable.$load({clearCache:true});\n\n      alert(\"Preregistration Course Added\",{flash:true});\n    },\n    function(response) {  // ---------- addClass Error\n      var errorMessage = response.data.errors?response.data.errors.errorMessage:null;\n\n      if (response.data.errors.errorMessage) {\n        errorMsg = response.data.errors.errorMessage;\n      }\n      else if (response.data.errors[0].errorMessage) {\n        errorMsg = response.data.errors[0].errorMessage;\n      } \n      else {\n        errorMsg = errorMessage?errorMessage:response.data;\n      }\n      if (errorMsg) {\n        alert(\"addClass Error: \" + errorMsg,{type:\"error\"});  // Display Error\n        return;\n      }\n    });  // ---------- addClass Close\n\n  });  // promise.then Close\n\n}      // waitForPinsLoads() Close\n\nfunction arePinsLoaded() {  // See if the PIN variables are loaded\n  var deferred2 = $.Deferred();\n  var nextStep2 = function() {\n    if ($ConsentRequired == null || $InstructorPIN == null || $DepartmentPIN == null) {\n      // PIN variables are not loaded yet, wait a little more.\n      setTimeout(nextStep2, 100); \n    }\n    else {\n      // PIN variables have loaded\n      deferred2.resolve(\"PIN Variables Loaded\");\n    }\n  }\n  nextStep2();\n  return deferred2.promise();\n}",
                                          "name": "AddCourseButton",
                                          "label": "Add Course",
                                          "type": "button"
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "AddClassesButtons",
                              "showInitially": true,
                              "style": "blockInline",
                              "label": "",
                              "type": "form"
                        }
                  ],
                  "name": "BlockAddClasses",
                  "showInitially": false,
                  "style": "blocks",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "name": "CoursesTableLabel",
                              "type": "literal",
                              "value": "Preregistration Choices"
                        },
                        {
                              "allowDelete": true,
                              "components": [
                                    {
                                          "asHtml": false,
                                          "name": "TermDesc",
                                          "model": "TERM_DESC",
                                          "label": "Term",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "CRN",
                                          "model": "CRN",
                                          "label": "CRN",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "CourseID",
                                          "model": "COURSE_ID",
                                          "label": "Course ID",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "Title",
                                          "model": "TITLE",
                                          "label": "Title",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "Units",
                                          "model": "UNITS",
                                          "label": "Units",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "Block",
                                          "model": "BLOCK",
                                          "label": "Block",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "readonly": false,
                                          "name": "Points",
                                          "onLoad": "",
                                          "model": "POINTS",
                                          "label": "Points",
                                          "loadInitially": false,
                                          "type": "text",
                                          "onUpdate": "// Points - onUpdate\n\n// Update Total Points value\n\nvar i = 0;\nvar j = document.getElementById('pbid-TotalPointsIndex').value;\nvar points = 0;\nvar pointTotal = 0;\nvar allocated = 0;\nvar trk;\nvar trackCount = 0;\n\nfor (i=0; i<j; i++) {\n\n  // Numeric Input Only\n  points = document.getElementById('pbid-Points-' + i).value.replace(/[^0-9]/g,'');\n  if (points == '') {\n    points = 0;\n  }\n  points = parseInt(points);\n  document.getElementById('pbid-Points-' + i).value = points;\n\n  pointTotal = pointTotal + points;  // Sum points\n\n  // See if each course has an allocated point value\n  if (document.getElementById('pbid-Points-' + i).value > 0) {\n    allocated++;\n  }\n\n  // See if each Grading Track has been selected\n  trk = document.getElementById(\"pbid-Track-\" + i);\n  if (trk.options[trk.selectedIndex].text > \"\") {\n    trackCount++;\n  }\n}\n\n// Each course needs to have at least one point allocated\nif (allocated < j) {\n  waitForIt();\n}\n\n// Each course needs to have a chosen Grading Track\nif (trackCount < j) {\n  waitForIt();\n}\n\ndocument.getElementById('pbid-Points-' + j).value = pointTotal;  // Update Total Points\n\n// Change points total red if points total value goes over MaxPoints\n// and deactivate the Save Changes button\nif (pointTotal > document.getElementById('pbid-MaxPoints').value) {\n  document.getElementById('pbid-Points-' + j).style.color = 'red';\n  waitForIt();\n}\nelse {\n  document.getElementById('pbid-Points-' + j).style.color = 'black';\n  document.getElementById('pbid-CoursesTable-save-button').disabled = false;\n}\n\n// Allow time for the CoursesTable's Save Changes button to finish its initial activation\nfunction waitForIt() {\n  paws = setTimeout(go, 100);\n}\n\n// Go - Deactivate the Save Changes button\nfunction go() {\n  document.getElementById('pbid-CoursesTable-save-button').disabled = true;\n}",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "sourceParameters": {},
                                          "name": "Track",
                                          "onLoad": "",
                                          "model": "TRACKVALUE",
                                          "sourceModel": "getGradingTrack",
                                          "label": "Grading Track",
                                          "loadInitially": false,
                                          "labelKey": "TRACK_LABEL",
                                          "type": "select",
                                          "valueKey": "TRACK_VALUE",
                                          "onUpdate": "// Track - onUpdate\n\n// Update Total Points value\n\nvar i = 0;\nvar j = document.getElementById('pbid-TotalPointsIndex').value;\nvar points = 0;\nvar pointTotal = 0;\nvar allocated = 0;\nvar trk;\nvar trackCount = 0;\n\nfor (i=0; i<j; i++) {\n\n  // Numeric Input Only\n  points = document.getElementById('pbid-Points-' + i).value.replace(/[^0-9]/g,'');\n  if (points == '') {\n    points = 0;\n  }\n  points = parseInt(points);\n  document.getElementById('pbid-Points-' + i).value = points;\n\n  pointTotal = pointTotal + points;  // Sum points\n\n  // See if each course has an allocated point value\n  if (document.getElementById('pbid-Points-' + i).value > 0) {\n    allocated++;\n  }\n\n  // See if each Grading Track has been selected\n  trk = document.getElementById(\"pbid-Track-\" + i);\n  if (trk.options[trk.selectedIndex].text > \"\") {\n    trackCount++;\n  }\n}\n\n// Each course needs to have at least one point allocated\nif (allocated < j) {\n  waitForIt();\n}\n\n// Each course needs to have a chosen Grading Track\nif (trackCount < j) {\n  waitForIt();\n}\n\ndocument.getElementById('pbid-Points-' + j).value = pointTotal;  // Update Total Points\n\n// Change points total red if points total value goes over MaxPoints\n// and deactivate the Save Changes button\nif (pointTotal > document.getElementById('pbid-MaxPoints').value) {\n  document.getElementById('pbid-Points-' + j).style.color = 'red';\n  waitForIt();\n}\nelse {\n  document.getElementById('pbid-Points-' + j).style.color = 'black';\n  document.getElementById('pbid-CoursesTable-save-button').disabled = false;\n}\n\n// Allow time for the CoursesTable's Save Changes button to finish its initial activation\nfunction waitForIt() {\n  paws = setTimeout(go, 100);\n}\n\n// Go - Deactivate the Save Changes button\nfunction go() {\n  document.getElementById('pbid-CoursesTable-save-button').disabled = true;\n}",
                                          "required": false
                                    },
                                    {
                                          "asHtml": false,
                                          "name": "Instructor",
                                          "model": "INSTRUCTOR",
                                          "label": "Instructor",
                                          "loadInitially": false,
                                          "type": "display"
                                    },
                                    {
                                          "name": "Status",
                                          "model": "REG_STATUS",
                                          "loadInitially": false,
                                          "type": "hidden"
                                    },
                                    {
                                          "name": "TrackLabel",
                                          "model": "TRACKLABEL",
                                          "loadInitially": false,
                                          "type": "hidden"
                                    },
                                    {
                                          "name": "TrackValue",
                                          "model": "TRACKVALUE",
                                          "loadInitially": false,
                                          "type": "hidden"
                                    },
                                    {
                                          "name": "BlockValue",
                                          "model": "BLOCKVALUE",
                                          "loadInitially": false,
                                          "type": "hidden"
                                    },
                                    {
                                          "name": "TermCode",
                                          "model": "TERM_CODE",
                                          "loadInitially": false,
                                          "type": "hidden"
                                    }
                              ],
                              "onClick": "",
                              "onError": "alert(\"Failed Save\",{type:\"error\"});",
                              "onSave": "// CoursesTable - onSave\n\nvar actionAskConfirm = null;\nvar actionSave = 1;\nvar actionCancel = 2;\nvar result = true;  // Do not call default save after \n\nif ($CoursesTable.myAction == actionAskConfirm ) {\n\n  // We want confirmation if save button is clicked\n  \n  alert(\"Are you sure you want to save these changes?\",\n    { prompts:\n      [\n        { label:\"OK\",\n          action:function() {\n            $CoursesTable.myAction = actionSave;\n            $CoursesTable.$save();\n          }\n        },\n        { label:\"Cancel\",\n          action:function() {\n            $CoursesTable.myAction = actionCancel;\n            $CoursesTable.$save();\n          }\n        }\n      ]\n    }\n  );\n\n}\nelse if ($CoursesTable.myAction == actionSave) {  \n  result = false;  // Call default save after onSave\n}\n \n// Reset to ask save confirmation\n$CoursesTable.myAction = actionAskConfirm ;\nreturn result;",
                              "allowNew": false,
                              "onSaveSuccess": "alert(\"Changes Applied\",{flash:true});",
                              "pageSize": 30,
                              "saveDataLabel": "Save Changes",
                              "label": "",
                              "loadInitially": false,
                              "type": "htable",
                              "newRecordLabel": "",
                              "deleteRecordLabel": "Drop",
                              "refreshDataLabel": "Reset",
                              "name": "CoursesTable",
                              "allowModify": true,
                              "onLoad": "// CoursesTable - onLoad\n\nvar rows = $CoursesTable.$data.length;\nvar row = 0;\nvar paws;\nvar j = 0;\nvar k = 0;\nvar points = 0;\n\n// Populate Track select labels and values\n$Track.$load();\n\nwaitForIt();\n\n// Allow time for the database call to finish\nfunction waitForIt() {\n  paws = setTimeout(go, 300);\n}\n\n// Go\nfunction go() {\n  for (row=0; row<rows; row++) {\n\n    // Remove readonly attribute on Points input text objects\n    document.getElementById('pbid-Points-' + row).removeAttribute('readonly');\n\n    // Total the points for the Total Points line\n    points = points + parseInt(document.getElementById('pbid-Points-' + row).value);\n\n    // Convert null to zero\n    if (document.getElementById('pbid-Points-' + row).value == '') {\n      document.getElementById('pbid-Points-' + row).value = 0;\n    }\n  }\n\n  // Set Styling of Points Total Line\n  j = row - 1;\n  document.getElementById('pbid-Track-' + j).style.display = 'none';\n  document.getElementById('pbid-CoursesTabledelete-column-checkbox-' + j).style.display = 'none';\n  document.getElementById('pbid-Block-' + j).style.fontWeight = 'bold';  // \"Total\" text\n  document.getElementById('pbid-Block-' + j).style.fontSize = '115%';\n  document.getElementById('pbid-Points-' + j).readOnly = true;  // Points Total Styling\n  document.getElementById('pbid-Points-' + j).style.border = '0px';\n  document.getElementById('pbid-Points-' + j).style.boxShadow = 'inset 4px 4px 4px #FFFFFF';\n  document.getElementById('pbid-Points-' + j).style.fontWeight = 'bold';\n  document.getElementById('pbid-Points-' + j).style.fontSize = '115%';\n  document.getElementById('pbid-Points-' + j).style.paddingBottom = '14px';\n  document.getElementById('pbid-Points-' + j).style.paddingRight = '21px';\n\n  // Save the Total Points Index\n  document.getElementById('pbid-TotalPointsIndex').value = j;\n\n  // Show the Course Add Block\n  $BlockAddClasses.$visible = true;\n\n  // Show or Hide the Student Courses Block\n  if (j > 0) {\n    $BlockStuCourses.$visible = true;\n  }\n  else {\n    $BlockStuCourses.$visible = false;\n    alert(\"No preregistration records found.\",{flash:true});\n  }\n\n  document.getElementById('pbid-UserButton').click();\n\n  loopForever();\n}\n\nfunction loopForever() {\n  paws = setTimeout(getRowCount, 250);\n}\n\nfunction getRowCount() {\n\n  // This function checks to see if a row from the $CoursesTable has been deleted.\n  // If a row has been deleted, then update the Total Points value.\n\n  if (document.getElementById('pbid-TotalPointsIndex').value != $CoursesTable.$data.length - 1) {\n\n    // Retotal the total point values\n    rows = $CoursesTable.$data.length;\n    row = 0;\n    points = 0;\n    for (row=0; row<rows-1; row++) {\n      if (document.getElementById('pbid-Points-' + row).value == '') {\n        // Convert null to zero\n        document.getElementById('pbid-Points-' + row).value = 0;\n      }\n      points = points + parseInt(document.getElementById('pbid-Points-' + row).value);\n    }\n\n    // Save the Total Points Index\n    j = $CoursesTable.$data.length - 1;\n    document.getElementById('pbid-TotalPointsIndex').value = j;\n\n    // Update Total Points\n    document.getElementById('pbid-Points-' + j).value = points;\n  }\n\n  loopForever();\n}",
                              "model": "getStuCourses",
                              "allowReload": true,
                              "parameters": {
                                    "gmod_code": "$Track.$selected?$Track.$selected.TRACK_VALUE:null",
                                    "pre_reg_term": "document.getElementById(\"pbid-PreRegTerm\").value",
                                    "stu_pidm": "$PassPIDM",
                                    "points": "$Points"
                              }
                        },
                        {
                              "components": [
                                    {
                                          "valueStyle": "btn btn-sm",
                                          "onClick": "// CoursesReset - onClick\n\n// Reload the CoursesTable from the database\n$CoursesTable.$load({clearCache:true});",
                                          "name": "CoursesReset",
                                          "label": "Reset",
                                          "type": "button"
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "CoursesButtons",
                              "showInitially": false,
                              "style": "blockInline",
                              "type": "form"
                        }
                  ],
                  "name": "BlockStuCourses",
                  "showInitially": false,
                  "style": "blocks",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "submitLabel": "",
                              "components": [
                                    {
                                          "sourceParameters": {
                                                "pre_reg_term": "document.getElementById(\"pbid-PreRegTerm\").value"
                                          },
                                          "name": "SearchTermSelect",
                                          "onLoad": "",
                                          "sourceModel": "getTermSelect",
                                          "label": "Term",
                                          "loadInitially": false,
                                          "placeholder": "&nbsp;",
                                          "labelKey": "TERM_LABEL",
                                          "type": "select",
                                          "valueKey": "TERM_VALUE",
                                          "onUpdate": "// SearchTermSelect - onUpdate\n\n// Indicate SearchBlockSelect and SearchInstructorSelect are loading\ndocument.getElementById('pbid-SearchBlockSelect').options[0].text = 'Loading...';\n\n// Load SearchBlockSelect and SearchInstructorSelect select lists\n$SearchBlockSelect.$load({clearCache:true});",
                                          "required": false
                                    },
                                    {
                                          "sourceParameters": {
                                                "search_term": "$SearchTermSelect.$selected?$SearchTermSelect.$selected.TERM_VALUE:null",
                                                "search_subject": "$SearchSubjectSelect.$selected?$SearchSubjectSelect.$selected.SUBJECT_VALUE:null"
                                          },
                                          "name": "SearchSubjectSelect",
                                          "onLoad": "// SearchSubjectSelect - onLoad\n\ndocument.getElementById('pbid-SearchSubjectSelect').options[0].text = '';",
                                          "sourceModel": "getSubjects",
                                          "label": "Subject",
                                          "loadInitially": false,
                                          "placeholder": "&nbsp;",
                                          "labelKey": "SUBJECT_LABEL",
                                          "type": "select",
                                          "valueKey": "SUBJECT_VALUE",
                                          "onUpdate": "// SearchSubjectSelect - onUpdate\n\n// Edit\n\nif (document.getElementById('pbid-SearchTermSelect').options.selectedIndex == 0)  {\n  alert(\"Please select a term.\", {flash: true,type:\"error\"});\n  document.getElementById('pbid-SearchTermSelect').focus();\n  document.getElementById('pbid-SearchSubjectSelect').selectedIndex = '0';\n  return;\n}\n\n// Indicate SearchInstructorSelect is loading\ndocument.getElementById('pbid-SearchInstructorSelect').options[0].text = 'Loading...';\n\n// Load SearchInstructorSelect select list\n$SearchInstructorSelect.$load({clearCache:true});",
                                          "required": false
                                    },
                                    {
                                          "readonly": false,
                                          "name": "SearchCourseNumber",
                                          "onLoad": "",
                                          "label": "CRN",
                                          "loadInitially": true,
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "readonly": false,
                                          "name": "SearchCourseID",
                                          "label": "Course ID",
                                          "loadInitially": true,
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "readonly": false,
                                          "name": "SearchCourseTitle",
                                          "label": "Course Title",
                                          "loadInitially": true,
                                          "type": "text",
                                          "parameters": {},
                                          "required": false,
                                          "validation": {}
                                    },
                                    {
                                          "label": "Block",
                                          "loadInitially": false,
                                          "type": "select",
                                          "required": false,
                                          "sourceParameters": {
                                                "search_term": "$SearchTermSelect.$selected?$SearchTermSelect.$selected.TERM_VALUE:null"
                                          },
                                          "name": "SearchBlockSelect",
                                          "onLoad": "document.getElementById('pbid-UserButton').click();\n\ndocument.getElementById('pbid-SearchBlockSelect').options[0].text = '';",
                                          "sourceModel": "getBlocks",
                                          "placeholder": "&nbsp;",
                                          "labelKey": "BLOCK_LABEL",
                                          "valueKey": "BLOCK_VALUE",
                                          "onUpdate": "",
                                          "value": ""
                                    },
                                    {
                                          "sourceParameters": {
                                                "search_term": "$SearchTermSelect.$selected?$SearchTermSelect.$selected.TERM_VALUE:null",
                                                "search_subject": "$SearchSubjectSelect.$selected?$SearchSubjectSelect.$selected.SUBJECT_VALUE:null"
                                          },
                                          "name": "SearchInstructorSelect",
                                          "onLoad": "// SearchInstructorSelect - onLoad\n\ndocument.getElementById('pbid-UserButton').click();\n\ndocument.getElementById('pbid-SearchInstructorSelect').options[0].text = '';\n\ndocument.getElementById('pbid-SearchInstructorSelect').selectedIndex = '0';\n\nif (document.getElementById('pbid-SearchInstructorSelect').length > 1) {\n document.getElementById('pbid-SearchInstructorSelect').remove(document.getElementById('pbid-SearchInstructorSelect').length-1);\n}",
                                          "sourceModel": "getInstructors",
                                          "label": "Instructor",
                                          "loadInitially": false,
                                          "placeholder": "&nbsp;",
                                          "labelKey": "INSTR_LABEL",
                                          "type": "select",
                                          "valueKey": "INSTR_VALUE",
                                          "onUpdate": "",
                                          "required": false
                                    },
                                    {
                                          "sourceParameters": {},
                                          "name": "SearchDegReqSelect",
                                          "onLoad": "document.getElementById('pbid-SearchDegReqSelect').options[0].text = '';",
                                          "sourceModel": "getDegreeRequirements",
                                          "label": "Degree Req",
                                          "loadInitially": false,
                                          "placeholder": "&nbsp;",
                                          "labelKey": "DEGREQ_LABEL",
                                          "type": "select",
                                          "valueKey": "DEGREQ_VALUE",
                                          "required": false
                                    },
                                    {
                                          "sourceParameters": {},
                                          "name": "SearchCampusSelect",
                                          "onLoad": "document.getElementById('pbid-SearchCampusSelect').options[0].text = '';",
                                          "sourceModel": "getCampuses",
                                          "label": "Campus",
                                          "loadInitially": false,
                                          "placeholder": "&nbsp;",
                                          "labelKey": "CAMPUS_LABEL",
                                          "type": "select",
                                          "valueKey": "CAMPUS_VALUE",
                                          "required": false
                                    },
                                    {
                                          "components": [
                                                {
                                                      "valueStyle": "btn btn-sm",
                                                      "onClick": "// ClassSearchSubmit - onClick\n\n// Edits\n\nif (document.getElementById('pbid-SearchTermSelect').options.selectedIndex == 0)  {\n  alert(\"Please select a term.\", {flash: true,type:\"error\"});\n  document.getElementById('pbid-SearchTermSelect').focus();\n  return;\n}\n\n// Show the AddGrid\n$BlockCourseAdd.$visible = true;\n\ndocument.getElementById(\"pbid-CourseAddSearchLabel\").innerHTML = \"Loading...\";\n\n$AddGrid.$load({clearCache:true});",
                                                      "name": "ClassSearchSubmit",
                                                      "label": "Class Search",
                                                      "type": "button"
                                                },
                                                {
                                                      "valueStyle": "btn btn-sm",
                                                      "onClick": "// ClassSearchReturn - onClick\n\n// Turn off the Class Search blocks and turn on the Add and Drop blocks.\n\n$BlockAddClasses.$visible = true;\n$BlockStuCourses.$visible = true;\n$BlockClassSearch.$visible = false;\n$BlockCourseAdd.$visible = false;\n\ndocument.getElementById('pbid-ClassSearch').reset();",
                                                      "name": "ClassSearchReturn",
                                                      "label": "Return",
                                                      "type": "button"
                                                }
                                          ],
                                          "name": "BlockClassSearchButtons",
                                          "showInitially": true,
                                          "type": "block"
                                    }
                              ],
                              "submit": "",
                              "nextButtonLabel": "Next",
                              "name": "ClassSearch",
                              "showInitially": true,
                              "label": "Class Schedule Search (200 results max)",
                              "type": "form"
                        }
                  ],
                  "name": "BlockClassSearch",
                  "showInitially": false,
                  "style": "blockForm",
                  "type": "block"
            },
            {
                  "components": [
                        {
                              "name": "CourseAddSearchLabel",
                              "type": "literal",
                              "value": "Choose class schedule criteria to view available courses"
                        },
                        {
                              "components": [
                                    {
                                          "allowDelete": false,
                                          "components": [
                                                {
                                                      "readonly": false,
                                                      "booleanTrueValue": "1",
                                                      "booleanFalseValue": "0",
                                                      "name": "AddCourse",
                                                      "onLoad": "",
                                                      "model": "",
                                                      "label": "",
                                                      "loadInitially": true,
                                                      "type": "boolean",
                                                      "onUpdate": "// AddCourse - onUpdate\n\nvar rows = $AddGrid.$data.length;\nvar i = 0;\nvar k = 0;\n\n// Loop through all AddGrid rows\nfor (i=0; i<rows; i++) {\n\n  if (document.getElementById(\"pbid-AddCourse-\" + i).checked) {\n\n    // User checked an AddGrid's AddCourse checkbox\n\n    // Set the CRN within the AddEntryForm\n    $ClassCRN = $AddGrid.$data[i].CRN;\n\n    // Hide the Class Schedule Search and Class Schedule Search Results blocks\n    $BlockClassSearch.$visible = false;\n    $BlockCourseAdd.$visible = false;\n\n    // Show the Course Add and Course Drop blocks\n    $BlockAddClasses.$visible = true;\n    $BlockStuCourses.$visible = true;\n\n    // Reset the Class Search Results form\n    document.getElementById(\"pbid-AddCourse-\" + i).click();  // Maintain state of checkbox\n    document.getElementById(\"pbid-CourseAddForm\").reset();\n    document.getElementById('pbid-ClassSearch').reset();\n\n    break;\n  }\n}"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "documentation": "",
                                                      "name": "AddCRN",
                                                      "onLoad": "// Addcourse - onLoad\n\n// Hide the non-course checkboxes - THIS IS NOT WORKING - LEAVING HERE FOR NOW FOR LATER RESOLUTION\nalert(\"TESTING\",{flash:true});\nvar addRows = $AddGrid.$data.length;\nvar k = 0;\nalert(addRows=\" + addRows,{flash:true});\n// Loop thru all AddGrid rows\nfor (k=0; k<addRows; k++) {\n\n  // Hide the AddCourse Checkboxes based on CRN\n  //if ($AddGrid.$data[k].CRN == '<b>CRN</b>' || $AddGrid.$data[k].CRN == '' || $AddGrid.$data[k].CRN == null) {\n\n\nalert(\"k=\" + k,{flash:true});\n\n\n     // document.getElementById(\"pbid-AddCourse-\" + k).style.display = 'none';\n  //}\n\n}",
                                                      "model": "CRN",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddCourseID",
                                                      "model": "COURSE_ID",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddTitle",
                                                      "model": "TITLE",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddBlock",
                                                      "model": "BLOCK",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddDates",
                                                      "model": "DATES",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddTime",
                                                      "model": "SESSION_TIME",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddUnits",
                                                      "model": "UNITS",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddInstructor",
                                                      "model": "INSTRUCTOR",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddLimit",
                                                      "model": "LIMIT",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddReserved",
                                                      "model": "RESERVED",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddClassSize",
                                                      "model": "CLASS_SIZE",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddAvailable",
                                                      "model": "AVAILABLE",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddWaitList",
                                                      "model": "WAIT_LIST",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddLocation",
                                                      "model": "LOCATION",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddDegReq",
                                                      "model": "DEG_REQ",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "asHtml": true,
                                                      "name": "AddCampus",
                                                      "model": "CAMPUS",
                                                      "loadInitially": false,
                                                      "type": "display"
                                                },
                                                {
                                                      "name": "AddTerm",
                                                      "model": "TERM_CODE",
                                                      "loadInitially": false,
                                                      "type": "hidden"
                                                }
                                          ],
                                          "onClick": "",
                                          "allowNew": false,
                                          "pageSize": 250,
                                          "label": "",
                                          "loadInitially": false,
                                          "type": "htable",
                                          "name": "AddGrid",
                                          "allowModify": false,
                                          "onLoad": "// AddGrid - onLoad\n\n// Set AddGrid Label\n\nvar termSelected = $SearchTermSelect.$selected?$SearchTermSelect.$selected.TERM_VALUE:null;\n\nif (termSelected == null) {\n  document.getElementById(\"pbid-CourseAddSearchLabel\").innerHTML = \"Choose class schedule criteria to view available courses.\";\n}\nelse {\n  document.getElementById(\"pbid-CourseAddSearchLabel\").innerHTML = \"Class Schedule Search Course Results\";\n}\n\n\n// Turn off the checkboxes for non-course rows\n\ndocument.getElementById('pbid-UserButton').click();\n\nvar table = document.getElementById(\"pbid-AddGrid\");\nvar CRN = '';\nvar i = 0;\n\n// Loop through all AddGrid rows\nfor (i=0; i<table.rows.length-1; i++) {\n\n  CRN = $AddGrid.$data[i].CRN;\n\n  if (CRN == '<b>CRN</b>' || CRN == '' || CRN == null) {\n    document.getElementById(\"pbid-AddCourse-\" + i).style.display = \"none\";  // Hide Checkbox\n  }\n\n}  // Close For Loop\n\ndocument.getElementById('pbid-UserButton').click();",
                                          "model": "getAddGrid",
                                          "allowReload": false,
                                          "parameters": {
                                                "search_block": "$SearchBlockSelect.$selected?$SearchBlockSelect.$selected.BLOCK_VALUE:null",
                                                "search_title": "$SearchCourseTitle",
                                                "search_crn": "$SearchCourseNumber",
                                                "search_term": "$SearchTermSelect.$selected?$SearchTermSelect.$selected.TERM_VALUE:null",
                                                "search_degreq": "$SearchDegReqSelect.$selected?$SearchDegReqSelect.$selected.DEGREQ_VALUE:null",
                                                "search_instr": "$SearchInstructorSelect.$selected?$SearchInstructorSelect.$selected.INSTR_VALUE:null",
                                                "search_course_id": "$SearchCourseID",
                                                "search_subject": "$SearchSubjectSelect.$selected?$SearchSubjectSelect.$selected.SUBJECT_VALUE:null",
                                                "search_campus": "$SearchCampusSelect.$selected?$SearchCampusSelect.$selected.CAMPUS_VALUE:null"
                                          }
                                    }
                              ],
                              "nextButtonLabel": "Next",
                              "name": "CourseAddForm",
                              "showInitially": true,
                              "label": "",
                              "type": "form"
                        }
                  ],
                  "name": "BlockCourseAdd",
                  "showInitially": false,
                  "style": "blocks",
                  "type": "block"
            }
      ],
      "name": "CCStudentPreReg",
      "style": "",
      "label": "",
      "title": "Preregistration",
      "type": "page",
      "importCSS": "cc_global_css,ccStyleStuPreReg"
}